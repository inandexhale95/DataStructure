그래프는 비선형 자료구조로서 정점(Vertex)과 간선(Edge)으로 구선되어 있다.
정점은 그래프 노드라고도 하며, 간선은 노드를 연결하는 라인에 해당한다.

정점(Vertex) : 그래프의 노드
간선(Edge) : 노드를 연결하는 선
가중치(Weight) : 한 정점에서 다른 정점으로 가는 간선에 할당된 비용(cost)
인접 정점(Adjacent Vertex) : 한 노드에서 간선에 의해 직접 연결된 이웃 정점
차수(Degree) : 한 노드에 연결된 인접한 정점들의 수
진입 차수(In-Degree) : 노드 밖에서 들어오는 간선의 수
진출 차수(Out-Degree) : 노드 밖으로 나가는 간선의 수

---------------------------------------------------------

방향 그래프(Directed Graph)와 무방향 그래프(Undirected Graph)
방향 그래프는 유향그래프라고도 불리우는데, 간선이 방향을 가지고 있는 그래프로서 하나의 간선이 한 방향을 가리키는 그래프이다.
무방향 그래프는 간선이 방향을 가지고 있지 않은 것으로 양방향으로 이동할 수 있는 그래프 이다.

가중치 그래프(Weighted Graph)
가중치 그래프란 간선에 비용이나 가중치를 부여한 그래프를 가리킨다.

---------------------------------------------------------

그래프를 표현하는 방식은 크게 인접 리스트(Adjacency List)방식과 인접 행렬(Adjacency Matrix)방식으로 나눌 수 있다.

인접 리스트
인접 리스트는 그래프를 표현하는 가장 일반적인 방식으로서, 모든 정점에 대해 그 정점에 인접한 이웃 노드들을 리스트로 표현한 것이다.

----------------------------

그래프의 탐색
그래프의 정점들을 방문하여 목표 정점을 찾는 것을 그래프의 탐색이라 한다.
그래프를 탐색하는 방법에는 노드를 방문하는 순서에 따라 깊이 우선 탐색(Depth First Search)과 너비 우선 탐색(Breath First Search)이 있다.


깊이 우선 탐색(DFS) - Stack, Recursive
깊이 우선 탐색은 자식, 그 자식의 자식등으로 계속 이동하여 깊은 노드부터 처리하는 방식으로서 각 노드에서 형제 노드를 방문하기 전에 그 자식노드를 먼저 방문하게 된다.

너비 우선 탐색(BFS) - Queue
너비 우선 탐색은 자신과 가까운 형제 노드부터 처리하는 방식으로서 각 노드에서 자식 노드를 방문하기 전에 형제 노드를 먼저 방문하게 된다.